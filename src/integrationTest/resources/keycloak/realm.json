{
    "id": "genoa",
    "realm": "genoa",
    "displayName": "SEQiFY",
    "displayNameHtml": "SEQiFY",
    "notBefore": 1663879907,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 1800,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "none",
    "registrationAllowed": true,
    "registrationEmailAsUsername": true,
    "rememberMe": true,
    "verifyEmail": true,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": true,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 10,
    "roles": {
        "realm": [
            {
                "id": "dfc16168-1a1f-4030-a790-4e9683eb79c1",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "genoa",
                "attributes": {}
            },
            {
                "id": "2f5ff567-2187-4f92-bb7c-ada22aaddb33",
                "name": "default-roles-genoa",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": [
                        "offline_access",
                        "uma_authorization"
                    ]
                },
                "clientRole": false,
                "containerId": "genoa",
                "attributes": {}
            },
            {
                "id": "6a60e7c7-bd8f-45f8-8842-916eb7967b71",
                "name": "admin",
                "description": "${role_admin}",
                "composite": true,
                "composites": {
                    "realm": [
                        "uma_authorization"
                    ],
                    "client": {
                        "realm-management": [
                            "view-users",
                            "view-authorization",
                            "view-realm",
                            "uma_protection",
                            "manage-users",
                            "query-users",
                            "manage-authorization",
                            "manage-events"
                        ]
                    }
                },
                "clientRole": false,
                "containerId": "genoa",
                "attributes": {}
            },
            {
                "id": "697cdd58-bb71-4b27-b0d8-c7080a544b1b",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "genoa",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "65b77729-94d8-4583-821d-da6de3d69b83",
                    "name": "impersonation",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "7173deaa-7f58-4873-acf6-0e859d5fd3a7",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "b2a5f8e8-c765-40fe-ba1f-3fb9165667aa",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "ea200dce-d37b-4161-9799-b574f5844736",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "922578fc-894f-4c1e-b167-095563f0e024",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "e8a50817-d253-4bde-8f34-d358a9733610",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "ae1d884f-71c4-4710-bcc7-4470554b442c",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "f264e5d3-1602-4a5f-abdc-a8d9cf4e6369",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "f0ab43b1-0f23-473f-b786-c1685b888c60",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "9b41c6f2-45d9-43ef-aa54-f615c5c54490",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "ca6b2725-5980-4314-96bd-ec33f0e78d9a",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-groups",
                                "query-users"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "08847d5c-be5d-49ef-9b79-91968300cec3",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "51a5a6a6-acd4-4a88-8512-050512b5ebc3",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "c4c3e6e8-e579-419a-8477-fcbc584f3d65",
                    "name": "realm-admin",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "view-identity-providers",
                                "query-groups",
                                "view-events",
                                "create-client",
                                "query-realms",
                                "manage-identity-providers",
                                "view-realm",
                                "manage-users",
                                "manage-authorization",
                                "view-users",
                                "view-authorization",
                                "manage-clients",
                                "view-clients",
                                "query-users",
                                "manage-realm",
                                "manage-events",
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "2208b2f6-2a2b-43c9-af9b-b8ae04e600e6",
                    "name": "uma_protection",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "1d8d6ca0-d5c0-42be-a0bc-7033a1b22455",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "e70b5b69-c3b1-44a8-a2cc-be5d56812a1f",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "e11336e4-56ed-4476-99f0-410de69b97ef",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "acd58a55-5d3d-496d-8463-fdccf209aec7",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                },
                {
                    "id": "bbfa005b-feb8-4f6c-83b9-fd5b43b13bfa",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "rest-auth": [],
            "admin-cli": [],
            "genoa-guardian": [],
            "account-console": [],
            "broker": [],
            "account": [
                {
                    "id": "b6c7a7b3-2606-4ddd-a324-cd0f17dd4060",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "3623c4df-6ecd-4115-94c2-0ad69d819c75",
                    "attributes": {}
                },
                {
                    "id": "92de15cf-3eee-4c6a-82cc-7c82ea08e418",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "3623c4df-6ecd-4115-94c2-0ad69d819c75",
                    "attributes": {}
                },
                {
                    "id": "e5f6855d-b8bb-43e9-8991-740e744afbcd",
                    "name": "manage-account",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "3623c4df-6ecd-4115-94c2-0ad69d819c75",
                    "attributes": {}
                }
            ],
            "seqify-app": []
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "2f5ff567-2187-4f92-bb7c-ada22aaddb33",
        "name": "default-roles-genoa",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "genoa"
    },
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
        {
            "id": "7f85b41b-7314-4fdb-b82b-cc9dbceba899",
            "username": "service-account-realm-management",
            "emailVerified": false,
            "createdTimestamp": 1717577593747,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "realm-management",
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "default-roles-genoa"
            ],
            "clientRoles": {
                "realm-management": [
                    "uma_protection"
                ]
            },
            "notBefore": 0,
            "groups": []
        },
        {
            "id": "60799e94-4e6d-4997-b1f8-90559021d487",
            "username": "service-account-seqify-app",
            "emailVerified": false,
            "createdTimestamp": 1629712008306,
            "enabled": true,
            "totp": false,
            "serviceAccountClientId": "seqify-app",
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
                "admin"
            ],
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings": {
        "realm-management": [
            {
                "client": "genoa-guardian",
                "roles": [
                    "impersonation",
                    "realm-admin"
                ]
            }
        ],
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account",
                    "view-groups"
                ]
            }
        ]
    },
    "clients": [
        {
            "id": "3623c4df-6ecd-4115-94c2-0ad69d819c75",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/genoa/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "secret",
            "redirectUris": [
                "/realms/genoa/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "37a4f1b4-686f-45aa-9b0b-3247b4e55313",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/genoa/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
                "/realms/genoa/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "a9dd6bc5-fd55-4f19-97af-798f25687f9c",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "7f8de97d-ee07-4b92-b3ce-9a71ede27d9c",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "de68a8e3-a5f8-4ff7-ac6e-dcdcaa8db530",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "377f51d3-a398-4e97-acd6-1b7747a38adf",
            "clientId": "genoa-guardian",
            "rootUrl": "https://app-test.seqify.net",
            "adminUrl": "https://app-test.seqify.net",
            "baseUrl": "https://app-test.seqify.net",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "https://app-test.seqify.net/*",
                "http://localhost:3000/*",
                "*",
                "http://localhost/*",
                "http://localhost:3000/"
            ],
            "webOrigins": [
                "http://localhost:9090/",
                "https://app-test.seqify.net",
                "http://localhost",
                "http://localhost:3000/",
                "+",
                "https://app-test.seqify.net/"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "saml.force.post.binding": "false",
                "saml.multivalued.roles": "false",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "saml.server.signature.keyinfo.ext": "false",
                "use.refresh.tokens": "true",
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "client_credentials.use_refresh_token": "false",
                "require.pushed.authorization.requests": "false",
                "saml.client.signature": "false",
                "id.token.as.detached.signature": "false",
                "saml.assertion.signature": "false",
                "saml.encrypt": "false",
                "login_theme": "guardian",
                "saml.server.signature": "false",
                "exclude.session.state.from.auth.response": "false",
                "saml.artifact.binding": "false",
                "saml_force_name_id_format": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "saml.authnstatement": "false",
                "display.on.consent.screen": "false",
                "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "3dbf9604-210e-432e-845b-6971f5c560ee",
                    "name": "feature",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "feature",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "feature",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "7029f414-cfae-45a6-9b8a-68f96c1314bd",
                    "name": "isseqsu",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "isseqsu",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "isseqsu",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "627c0328-abb0-468c-901f-e76cfd00b549",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a54392db-a1cf-4102-8661-b247595a369b",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1f57364c-84b4-4a16-b0dd-e8d1e8607505",
                    "name": "id_account",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "id_account",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "id_account",
                        "jsonType.label": "int"
                    }
                },
                {
                    "id": "08ef0eaf-7cf0-4834-b4dc-b83f1cdb6584",
                    "name": "attributes",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "false",
                        "userinfo.token.claim": "true",
                        "user.attribute": "companyName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "companyName",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "42f97599-bb0c-49c5-a2c3-acf5f3e0aa6b",
                    "name": "accountId",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "false",
                        "userinfo.token.claim": "true",
                        "user.attribute": "accountId",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "accountId",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "3c02c989-ec6d-452c-9a64-cd11d41a6fb6",
                    "name": "CreatedProperty",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "createdTimestamp",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "createdTimestamp",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "d08d777d-62d9-4ddc-9aed-7f4de2e8536e",
                    "name": "grps",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-group-membership-mapper",
                    "consentRequired": false,
                    "config": {
                        "full.path": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "756c24c5-e242-4b7a-855d-53aeaea18743",
                    "name": "userId",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "userId",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "userId",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "4c11d081-8a92-487f-871a-4575187802cb",
                    "name": "demoStartDate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "demoStartDate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "demoStartDate",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "351d5094-fb5c-46eb-9d59-979c736dc018",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "cc1a1e79-086b-4d62-b243-bb36ae7834d3",
                    "name": "id_user",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "id_user",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "id_user",
                        "jsonType.label": "int"
                    }
                },
                {
                    "id": "3847bb8a-fccc-4126-b090-d832f45cbd21",
                    "name": "role",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "role",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "role",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "379afc0d-56d4-4aa2-9f36-5beb54bfd87f",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "grps",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "8766ac30-3ef1-43e8-86ca-efd9385d8b55",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "245ef82c-a785-4c1d-9f7f-3b9a3322af61",
                    "name": "group_display_values",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "aggregate.attrs": "true",
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "groupDisplayValue",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groupDisplayValues",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "bffa9385-b622-4ae7-950f-8f40052b0976",
                    "name": "seqify_role",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "role",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "role",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "c6563b70-31ce-4b81-9b92-fb7a718597e5",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "427cfa2d-f666-416d-acc3-205b22e1e7eb",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "introspection.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "784e11e0-e493-4512-8124-1ab314729370",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "client_id",
                        "introspection.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "client_id",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "13faef12-1273-4a7f-ab9a-febf509b5ba0",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "introspection.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "authorizationSettings": {
                "allowRemoteResourceManagement": true,
                "policyEnforcementMode": "ENFORCING",
                "resources": [],
                "policies": [],
                "scopes": [],
                "decisionStrategy": "UNANIMOUS"
            }
        },
        {
            "id": "8aa57de1-7105-485e-8f03-e255e164045a",
            "clientId": "rest-auth",
            "rootUrl": "https://app-test.seqify.net",
            "adminUrl": "https://app-test.seqify.net",
            "baseUrl": "https://app-test.seqify.net",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "https://app-test.seqify.net/*",
                "http://localhost:3000/*",
                "*",
                "http://localhost/*",
                "http://localhost:3000/"
            ],
            "webOrigins": [
                "http://localhost:9090/",
                "https://app-test.seqify.net",
                "*",
                "http://localhost",
                "http://localhost:3000/",
                "https://app-test.seqify.net/"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "access.token.lifespan": "300",
                "saml.force.post.binding": "false",
                "saml.multivalued.roles": "false",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "true",
                "backchannel.logout.revoke.offline.tokens": "true",
                "saml.server.signature.keyinfo.ext": "false",
                "use.refresh.tokens": "false",
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "false",
                "client_credentials.use_refresh_token": "false",
                "require.pushed.authorization.requests": "false",
                "saml.client.signature": "false",
                "client.session.max.lifespan": "300",
                "client.session.idle.timeout": "300",
                "id.token.as.detached.signature": "false",
                "saml.assertion.signature": "false",
                "saml.encrypt": "false",
                "saml.server.signature": "false",
                "exclude.session.state.from.auth.response": "false",
                "saml.artifact.binding": "false",
                "saml_force_name_id_format": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "saml.authnstatement": "false",
                "display.on.consent.screen": "false",
                "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "aadafac4-3275-4062-b17d-8ea88fb1941f",
                    "name": "role",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "role",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "role",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "972bb524-1dcc-4c77-9a2f-2a343c1abcfd",
                    "name": "id_user",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "id_user",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "id_user",
                        "jsonType.label": "int"
                    }
                },
                {
                    "id": "063a9900-397d-4b3f-8504-d270ac1ee369",
                    "name": "id_account",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "id_account",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "id_account",
                        "jsonType.label": "int"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "bccdee3e-f52e-444c-994c-470360a50d88",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/genoa/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "**********",
            "redirectUris": [
                "/admin/genoa/console/*"
            ],
            "webOrigins": [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "96f0a8f3-7ac7-4bb3-8168-093fe601308e",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "35c14b28-c1c5-43da-92ba-4ca182814aab",
            "clientId": "seqify-app",
            "name": "",
            "description": "",
            "rootUrl": "https://app-test.seqify.net",
            "adminUrl": "https://app-test.seqify.net",
            "baseUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "secret",
            "redirectUris": [
                "https://app-test.seqify.net/*"
            ],
            "webOrigins": [
                "https://app-test.seqify.net"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
                "saml.force.post.binding": "false",
                "saml.multivalued.roles": "false",
                "post.logout.redirect.uris": "+",
                "oauth2.device.authorization.grant.enabled": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "saml.server.signature.keyinfo.ext": "false",
                "use.refresh.tokens": "true",
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "client_credentials.use_refresh_token": "false",
                "require.pushed.authorization.requests": "false",
                "saml.client.signature": "false",
                "id.token.as.detached.signature": "false",
                "saml.assertion.signature": "false",
                "client.secret.creation.time": "1717584472",
                "saml.encrypt": "false",
                "saml.server.signature": "false",
                "exclude.session.state.from.auth.response": "false",
                "saml.artifact.binding": "false",
                "saml_force_name_id_format": "false",
                "tls.client.certificate.bound.access.tokens": "false",
                "saml.authnstatement": "false",
                "display.on.consent.screen": "false",
                "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "e1354d1b-a9db-4971-b60a-5c0be1b6a922",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientId",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientId",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "b25d66c0-c064-45e0-bc3c-12c5b47f7740",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "7b1ef782-e6b7-4e3d-a32a-73a879d531a1",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "userinfo.token.claim": "true",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "authorizationSettings": {
                "allowRemoteResourceManagement": true,
                "policyEnforcementMode": "ENFORCING",
                "resources": [
                    {
                        "name": "Default Resource",
                        "type": "urn:seqify-app:resources:default",
                        "ownerManagedAccess": false,
                        "displayName": "",
                        "attributes": {},
                        "_id": "289afbcf-2a78-45f6-83e6-9b93f4c38f63",
                        "uris": [
                            "/*"
                        ],
                        "icon_uri": ""
                    }
                ],
                "policies": [],
                "scopes": [],
                "decisionStrategy": "UNANIMOUS"
            }
        }
    ],
    "clientScopes": [
        {
            "id": "7ce4a5a1-b4f6-46ec-a84c-e71e63345db7",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "b6944af6-ab0a-4b95-a659-143ec6db4db8",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "04e6b21b-6a9e-4471-b6bf-7eb162761e39",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "033528a3-d785-4cf2-9927-751377c93075",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "318c215c-6bab-4db2-9114-dd981de6d058",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "cc1bbfb8-b7e8-4ab7-8a29-484f69ecd07f",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "4f459e8b-319f-4c78-b67b-3e4f9a28adc0",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "043c9b20-a6f0-4556-8a3b-0f00f332014d",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "c97e033b-e7f0-4362-b5fc-3904cf1e3389",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                },
                {
                    "id": "b85f8720-bcd3-419d-8148-010d1d894a6f",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "b1bcc5dd-f20e-43fc-a415-f98493ec1f8a",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "61a86a88-aef4-446b-a367-fa3dd00e1be1",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "9588b8aa-1055-4fea-8ce0-fa8405634bc1",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "19142732-3b77-4577-baea-2f99614457e5",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "e35f479b-e016-477b-8064-9d2d15e3d771",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c772c063-a63d-48cb-9e8d-23b4d9bc8f50",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "f4444b9f-6f4a-45b3-8e61-c68cbd0e171a",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "99584ffb-1a09-466f-b67f-e4beb6120e1b",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "05785fa1-06be-493c-ba4b-6fcc07b0b36a",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "79693451-e110-4f1c-9f0f-8fcd9b0c4f6f",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c8f4b425-88cd-447c-8e2b-e5ca570aae1c",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "3f282fb8-f23d-49c4-99c3-df7bd07a6d0a",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "331c7d81-c269-48b7-b81c-9311bb2035b7",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f9b224fc-f60a-4acc-95df-a622bad69d34",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "de8e3c90-02f1-418a-bc09-d062304a6ecf",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a874c943-ab66-4826-808d-abf33722775c",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "53864547-a6cd-4196-9b64-32afb4d19597",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "46ea563d-5a26-4924-930b-2a9cd55998f0",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "538aeb85-142d-4106-a19a-67d019eb2310",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "da189fe5-81ab-4be2-bb76-7fb9b52a2616",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "c974d0fe-8348-4c27-a037-8af39eacc15c",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "e30c15f9-68a3-4e5f-a630-a07a6490d960",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false",
                "consent.screen.text": ""
            },
            "protocolMappers": [
                {
                    "id": "287f6037-1529-477e-a3de-48aef25489a3",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "cd8b3663-c6d7-4469-b16e-54af97c34915",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "15287206-69f9-4bdf-acb5-3dff12cc6195",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "44e991d6-8ad9-408f-a825-d07e84191b4d",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "00f23c7e-8cff-4314-93ce-5b1e64cb2963",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {
        "starttls": "false",
        "auth": "",
        "port": "25",
        "host": "127.0.0.1",
        "from": "noreply@seqify.net",
        "fromDisplayName": "SEQiFY",
        "ssl": "false"
    },
    "loginTheme": "guardian",
    "emailTheme": "guardian",
    "eventsEnabled": false,
    "eventsExpiration": 3600,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [
        "SEND_RESET_PASSWORD",
        "UPDATE_CONSENT_ERROR",
        "GRANT_CONSENT",
        "REMOVE_TOTP",
        "REVOKE_GRANT",
        "UPDATE_TOTP",
        "LOGIN_ERROR",
        "CLIENT_LOGIN",
        "RESET_PASSWORD_ERROR",
        "IMPERSONATE_ERROR",
        "CODE_TO_TOKEN_ERROR",
        "CUSTOM_REQUIRED_ACTION",
        "RESTART_AUTHENTICATION",
        "IMPERSONATE",
        "UPDATE_PROFILE_ERROR",
        "LOGIN",
        "UPDATE_PASSWORD_ERROR",
        "CLIENT_INITIATED_ACCOUNT_LINKING",
        "TOKEN_EXCHANGE",
        "LOGOUT",
        "REGISTER",
        "DELETE_ACCOUNT_ERROR",
        "CLIENT_REGISTER",
        "IDENTITY_PROVIDER_LINK_ACCOUNT",
        "DELETE_ACCOUNT",
        "UPDATE_PASSWORD",
        "CLIENT_DELETE",
        "FEDERATED_IDENTITY_LINK_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN",
        "CLIENT_DELETE_ERROR",
        "VERIFY_EMAIL",
        "CLIENT_LOGIN_ERROR",
        "RESTART_AUTHENTICATION_ERROR",
        "EXECUTE_ACTIONS",
        "REMOVE_FEDERATED_IDENTITY_ERROR",
        "TOKEN_EXCHANGE_ERROR",
        "PERMISSION_TOKEN",
        "SEND_IDENTITY_PROVIDER_LINK_ERROR",
        "EXECUTE_ACTION_TOKEN_ERROR",
        "SEND_VERIFY_EMAIL",
        "EXECUTE_ACTIONS_ERROR",
        "REMOVE_FEDERATED_IDENTITY",
        "IDENTITY_PROVIDER_POST_LOGIN",
        "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
        "UPDATE_EMAIL",
        "REGISTER_ERROR",
        "REVOKE_GRANT_ERROR",
        "EXECUTE_ACTION_TOKEN",
        "LOGOUT_ERROR",
        "UPDATE_EMAIL_ERROR",
        "CLIENT_UPDATE_ERROR",
        "UPDATE_PROFILE",
        "CLIENT_REGISTER_ERROR",
        "FEDERATED_IDENTITY_LINK",
        "SEND_IDENTITY_PROVIDER_LINK",
        "SEND_VERIFY_EMAIL_ERROR",
        "RESET_PASSWORD",
        "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
        "UPDATE_CONSENT",
        "REMOVE_TOTP_ERROR",
        "VERIFY_EMAIL_ERROR",
        "SEND_RESET_PASSWORD_ERROR",
        "CLIENT_UPDATE",
        "CUSTOM_REQUIRED_ACTION_ERROR",
        "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
        "UPDATE_TOTP_ERROR",
        "CODE_TO_TOKEN",
        "GRANT_CONSENT_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [
        {
            "alias": "oidc",
            "displayName": "Azure_AD_GENOA",
            "internalId": "ebbfedb8-d110-477f-ac38-58d97123e367",
            "providerId": "oidc",
            "enabled": true,
            "updateProfileFirstLoginMode": "on",
            "trustEmail": true,
            "storeToken": false,
            "addReadTokenRoleOnCreate": false,
            "authenticateByDefault": false,
            "linkOnly": false,
            "firstBrokerLoginFlowAlias": "first broker login",
            "config": {
                "userInfoUrl": "https://graph.microsoft.com/oidc/userinfo",
                "validateSignature": "true",
                "clientId": "b903df6f-3d60-4da3-9433-1d3266a214d7",
                "tokenUrl": "https://login.microsoftonline.com/d5c8234d-e5ab-4b2a-b3bd-e496173d0a09/oauth2/v2.0/token",
                "jwksUrl": "https://login.microsoftonline.com/d5c8234d-e5ab-4b2a-b3bd-e496173d0a09/discovery/v2.0/keys",
                "issuer": "https://login.microsoftonline.com/d5c8234d-e5ab-4b2a-b3bd-e496173d0a09/v2.0",
                "useJwksUrl": "true",
                "loginHint": "false",
                "authorizationUrl": "https://login.microsoftonline.com/d5c8234d-e5ab-4b2a-b3bd-e496173d0a09/oauth2/v2.0/authorize",
                "clientAuthMethod": "client_secret_post",
                "logoutUrl": "https://login.microsoftonline.com/d5c8234d-e5ab-4b2a-b3bd-e496173d0a09/oauth2/v2.0/logout",
                "syncMode": "IMPORT",
                "clientSecret": "**********",
                "defaultScope": "openid"
            }
        }
    ],
    "identityProviderMappers": [
        {
            "id": "d4b84d97-7b40-4732-be1b-ee317f4a9d6b",
            "name": "Mail",
            "identityProviderAlias": "oidc",
            "identityProviderMapper": "oidc-user-attribute-idp-mapper",
            "config": {
                "syncMode": "FORCE",
                "claim": "email",
                "user.attribute": "username"
            }
        }
    ],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "d297c048-bc8b-4085-bfa9-6d2bd1bba214",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ]
                }
            },
            {
                "id": "6a415672-68ae-42dc-bd02-d00535c35d68",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "aa265739-dd69-4884-a1ec-9281f4ec9275",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "fccd3159-1b38-45be-80ec-c9af5a0c8d17",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": [
                        "200"
                    ]
                }
            },
            {
                "id": "4606d474-2684-4a05-ae70-ee61b0a47ef5",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-full-name-mapper",
                        "oidc-address-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-role-list-mapper",
                        "saml-user-property-mapper",
                        "oidc-usermodel-attribute-mapper"
                    ]
                }
            },
            {
                "id": "927df662-7514-4055-b0f6-63d8d3cac97f",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "ccbfe6e0-7554-4285-ab3a-cfc1bff54dcb",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-property-mapper",
                        "oidc-full-name-mapper",
                        "saml-role-list-mapper"
                    ]
                }
            },
            {
                "id": "4f664293-ea73-4321-8d60-ba955a1d16c0",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
            {
                "id": "7b004dad-0e61-4add-a341-397befa0eed1",
                "providerId": "declarative-user-profile",
                "subComponents": {},
                "config": {
                    "kc.user.profile.config": [
                        "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}],\"unmanagedAttributePolicy\":\"ENABLED\"}"
                    ]
                }
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "53e66783-8c3b-4ddf-ac77-be0b92fe58d0",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "62554b0a-8a12-4122-b850-34f8e3669e0c",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "229bb0b1-0e13-4c70-ae93-9c502b07b9b7",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS512"
                    ]
                }
            },
            {
                "id": "709f2c42-0f10-4b94-8e9a-f55492f74576",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS256"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [
        ""
    ],
    "defaultLocale": "en",
    "authenticationFlows": [
        {
            "id": "e4604a91-ccfb-42d9-b1be-68b04ca37ad4",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f11b5eb4-a264-4bb4-bda5-8dba8673673f",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f71089c4-847c-4d04-8fbc-ef435e95eb84",
            "alias": "Custom reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 41,
                    "autheticatorFlow": true,
                    "flowAlias": "Custom reset credentials Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8aa54a07-b6c8-44f3-ab8f-87c1b3385f2d",
            "alias": "Custom reset credentials Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 21,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c643d0e5-4e5c-4003-a2f1-666ddf22397d",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "708db8ce-1c70-4fca-9e26-aced7b076186",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "389f608f-28a6-4fa8-a4ff-33b558a308e3",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8b59a19c-6720-4f30-a85d-220b03046855",
            "alias": "Registration with Email Validation",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "Registration with Email Validation registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "cff520aa-e2cc-435f-b9da-a39005ebed90",
            "alias": "Registration with Email Validation registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorConfig": "blacklist-config",
                    "authenticator": "registration-mail-check-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 61,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "account-registration-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 62,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 63,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "429f9780-2f38-4a79-bbe8-1351470eb37a",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "aa85118b-5c7b-47f6-b82a-e8fae7324155",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8bc1522e-e847-4236-9ff2-8c6834593fe5",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "14f6bd0a-f4d1-4ef9-9764-588e8759ad53",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7c2871e9-271e-4064-97fb-2bd80f8f87d6",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1c33a04f-a48f-47dd-9f0e-6a546650a421",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "fe5d4051-a2c4-4378-87c9-b80a94281473",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "b8609607-d552-42e4-b391-bc96d7f56672",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "0298f304-9e1f-49d1-81f3-0825596e6172",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "77e72962-098b-4dc8-aabf-ec8567c5baef",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7213f3dc-cd7d-49e1-b65b-215e668a9679",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "0277d35a-3874-4eba-a1c0-9c5617f4f0a4",
            "alias": "registration with email blacklist",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration with email blacklist registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "478079ff-c74a-4f9e-b11b-5769d2b9ba78",
            "alias": "registration with email blacklist registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": false,
            "authenticationExecutions": [
                {
                    "authenticator": "pre-fill-register-form-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "pre-fill-register-form-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "pre-fill-register-form-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 61,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorConfig": "blacklist-email-config",
                    "authenticator": "registration-mail-check-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 63,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 64,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "account-registration-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 65,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 66,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "50da0f1d-0cb5-478d-a9cd-851c8624874c",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "DISABLED",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8042c23f-b7d5-447f-875e-353ecf09882a",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "4444f32b-0c50-4384-b150-aec6bc7b9eda",
            "alias": "blacklist-config",
            "config": {
                "validDomains": "invalid.com##*invalid.com##in?alid.com"
            }
        },
        {
            "id": "b5b10622-c8cc-42c9-9eb4-06fbff499826",
            "alias": "blacklist-email-config",
            "config": {
                "invalidDomains": "invalid.com##in?alid.com##*invalid.com"
            }
        },
        {
            "id": "a9edcde3-c609-4123-9422-e42799521a5e",
            "alias": "blacklist-email-config",
            "config": {
                "validDomains": "invalid.com"
            }
        },
        {
            "id": "a0e0ba24-4ad4-4585-9f56-9f591879ebf1",
            "alias": "config-whitelist-mail",
            "config": {
                "validDomains": "valid.com##test.*##ab?.com"
            }
        },
        {
            "id": "0b4e8dc5-b1a8-47e4-8bab-9af07c0494c0",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "8f794856-6830-4af0-a0a1-c69a97aab15e",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": true,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration with email blacklist",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "Custom reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaAuthRequestedUserHint": "login_hint",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false",
        "cibaExpiresIn": "120",
        "oauth2DeviceCodeLifespan": "600",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": ""
    },
    "keycloakVersion": "24.0.5",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}
